name: Sip Cross-Platform Build

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g., v3.0.3)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            name: linux
            build_cmd: dist:linux
          - os: windows-latest
            name: windows
            build_cmd: dist:win
          - os: macos-latest
            name: macos
            build_cmd: dist:mac

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install Dependencies with npm install
        run: npm install

      - name: Install Dependencies with npm ci
        run: npm ci

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 rpm

      - name: Build Sip
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            env -i PATH="$PATH" HOME="$HOME" npm run ${{ matrix.build_cmd }} -- --linux dir deb rpm
            npm install -g appimage-builder
            appimage-builder --recipe AppImageBuilder.yml --skip-test
          else
            npm run ${{ matrix.build_cmd }}
          fi
        shell: bash
  
      - name: Prepare Artifacts
        run: |
          mkdir -p out
          export npm_package_version=$(node -p "require('./package.json').version")
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv dist/Sip-$npm_package_version.ia32.exe out/Sip-$npm_package_version.win32.exe || true
            mv dist/Sip-$npm_package_version.x64.exe out/Sip-$npm_package_version.win64.exe || true
          else
            mv dist/* out/
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sip-${{ matrix.name }}
          path: out/
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Release Condition
        run: |
          echo "github.ref is ${{ github.ref }}"
          echo "Release job running for tag: ${{ github.event.inputs.tag || github.ref_name }}"
        shell: bash
        
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifacts/sip-linux/*.AppImage
            artifacts/sip-linux/*.deb
            artifacts/sip-linux/*.rpm
            artifacts/sip-windows/*.exe
            artifacts/sip-macos/*.dmg
            artifacts/sip-macos/*.zip
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: Sip ${{ github.event.inputs.tag || github.ref_name }}
          body: "Automated Sip release for ${{ github.event.inputs.tag || github.ref_name }} - A MUD Client!"
