package com.planet_ink.sip;
/*
 * LoadNGo.java
 *
 * Created on February 3, 2001, 11:56 PM
 */


/**
 *
 * @author	Bo_Zimmerman
 * @version
 */
import java.io.*;
import java.util.*;
import java.awt.*;
import java.awt.List;

public class LoadNGo extends java.awt.Dialog 
{
	private static final long 	serialVersionUID = 1616809381585739498L;
	private static final String SPACES="                                                                       ";

	private List 		list2;
	private Button 		button1;
	private Button 		button2;
	private TextField 	textField2;
	private TextField 	textField1;
	private Button 		button3;
	private Button 		button4;
	private Label 		label1;
	private Label 		label2;
	private Calendar	lastClick		= Calendar.getInstance();
	private int			lastClickedOn	= -1;
	
	public String[] 	theList			= new String[100];
	public int[] 		thePorts		= new int[100];
	public Sip 			myParent		= null;
	public int 			listIndex		= 0;

	/** Creates new form LoadNGo */
	public LoadNGo(java.awt.Frame parent,boolean modal) 
	{
		super (parent, modal);
		myParent=(Sip)parent;
		initComponents ();
		setResizable(false);
		pack ();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the FormEditor.
	 */
	private void initComponents() 
	{
		list2 = new java.awt.List();
		button1 = new java.awt.Button();
		button2 = new java.awt.Button();
		textField2 = new java.awt.TextField();
		textField1 = new java.awt.TextField();
		button3 = new java.awt.Button();
		button4 = new java.awt.Button();
		label1 = new java.awt.Label();
		label2 = new java.awt.Label();
		this.setLayout(null);
		setModal(true);
		setTitle("Sip v1.1				(c)2001 Bo Zimmerman");
		setBackground(java.awt.Color.yellow);
		addWindowListener(new java.awt.event.WindowAdapter() 
		{
			public void windowOpened(java.awt.event.WindowEvent evt) 
			{
				formWindowOpened(evt);
			}
			public void windowClosing(java.awt.event.WindowEvent evt) 
			{
				closeDialog(evt);
			}
			public void windowClosed(java.awt.event.WindowEvent evt) 
			{
				formWindowClosed(evt);
			}
		});

		list2.setFont(new java.awt.Font ("Monospaced", 0, 11));
		list2.setBackground(java.awt.Color.white);
		list2.setForeground(java.awt.Color.black);
		list2.addItemListener(new java.awt.event.ItemListener() 
		{
			public void itemStateChanged(java.awt.event.ItemEvent evt) 
			{
				list2ItemStateChanged(evt);
			}
		});
		list2.addKeyListener(new java.awt.event.KeyAdapter() 
		{
			public void keyPressed(java.awt.event.KeyEvent evt) 
			{
				list2KeyPressed(evt);
			}
		});
		list2.addMouseListener(new java.awt.event.MouseAdapter() 
		{
			public void mouseClicked(java.awt.event.MouseEvent evt) 
			{
				list2MouseClicked(evt);
			}
		});

		this.add(list2);
		list2.setBounds(10, 30, 255, 130);

		button1.setFont(new java.awt.Font ("Dialog", 0, 11));
		button1.setLabel("Open");
		button1.setBackground(new java.awt.Color (224, 204, 152));
		button1.setForeground(java.awt.Color.black);
		button1.addKeyListener(new java.awt.event.KeyAdapter() 
		{
			public void keyPressed(java.awt.event.KeyEvent evt) 
			{
				button1KeyPressed(evt);
			}
		});
		button1.addMouseListener(new java.awt.event.MouseAdapter() 
		{
			public void mouseClicked(java.awt.event.MouseEvent evt) 
			{
				button1MouseClicked(evt);
			}
		});

		add(button1);
		button1.setBounds(270, 30, 50, 30);

		button2.setFont(new java.awt.Font ("Dialog", 0, 11));
		button2.setLabel("Exit");
		button2.setBackground(new java.awt.Color (224, 204, 152));
		button2.setForeground(java.awt.Color.black);
		button2.addKeyListener(new java.awt.event.KeyAdapter() 
		{
			public void keyPressed(java.awt.event.KeyEvent evt) 
			{
				button2KeyPressed(evt);
			}
		});
		button2.addMouseListener(new java.awt.event.MouseAdapter() 
		{
			public void mouseClicked(java.awt.event.MouseEvent evt) 
			{
				button2MouseClicked(evt);
			}
		});

		add(button2);
		button2.setBounds(270, 130, 50, 30);

		textField2.setBackground(java.awt.Color.white);
		textField2.setFont(new java.awt.Font ("Dialog", 0, 11));
		textField2.setForeground(java.awt.Color.black);
		textField2.setText("localhost");

		add(textField2);
		textField2.setBounds(50, 160, 215, 20);

		textField1.setBackground(java.awt.Color.white);
		textField1.setFont(new java.awt.Font ("Dialog", 0, 11));
		textField1.setForeground(java.awt.Color.black);
		textField1.setText("23");

		add(textField1);
		textField1.setBounds(50, 190, 60, 20);

		button3.setFont(new java.awt.Font ("Dialog", 0, 11));
		button3.setLabel("Add New");
		button3.setBackground(new java.awt.Color (224, 204, 152));
		button3.setForeground(java.awt.Color.black);
		button3.addKeyListener(new java.awt.event.KeyAdapter() 
		{
			public void keyPressed(java.awt.event.KeyEvent evt) 
			{
				button3KeyPressed(evt);
			}
		});
		button3.addMouseListener(new java.awt.event.MouseAdapter() 
		{
			public void mouseClicked(java.awt.event.MouseEvent evt) 
			{
				button3MouseClicked(evt);
			}
		});

		add(button3);
		button3.setBounds(120, 190, 50, 20);

		button4.setFont(new java.awt.Font ("Dialog", 0, 11));
		button4.setLabel("Delete");
		button4.setBackground(new java.awt.Color (224, 204, 152));
		button4.setForeground(java.awt.Color.black);
		button4.addKeyListener(new java.awt.event.KeyAdapter() 
		{
			public void keyPressed(java.awt.event.KeyEvent evt) 
			{
				button4KeyPressed(evt);
			}
		});
		button4.addMouseListener(new java.awt.event.MouseAdapter() 
		{
			public void mouseClicked(java.awt.event.MouseEvent evt) 
			{
				button4MouseClicked(evt);
			}
		});

		add(button4);
		button4.setBounds(180, 190, 50, 20);

		label1.setFont(new java.awt.Font ("Dialog", 0, 11));
		label1.setBackground(java.awt.Color.yellow);
		label1.setForeground(java.awt.Color.black);
		label1.setText("Server:");

		add(label1);
		label1.setBounds(10, 160, 40, 20);


		label2.setFont(new java.awt.Font ("Dialog", 0, 11));
		label2.setBackground(java.awt.Color.yellow);
		label2.setForeground(java.awt.Color.black);
		label2.setText("Port:");

		add(label2);
		label2.setBounds(10, 190, 40, 20);
	}

	private void list2MouseClicked(java.awt.event.MouseEvent evt) 
	{
		Calendar C=Calendar.getInstance();
		C.add(Calendar.SECOND,-2);
		if(lastClick.after(C))
		{
			if(lastClickedOn==list2.getSelectedIndex())
				button1MouseClicked(null);
		}
		lastClickedOn=list2.getSelectedIndex();
		lastClick=Calendar.getInstance();
	}

	private void button1KeyPressed(java.awt.event.KeyEvent evt) 
	{
		if((evt.getKeyCode()==10)||(evt.getKeyCode()==13))
			button1MouseClicked(null);
	}

	private void button1MouseClicked(java.awt.event.MouseEvent evt) 
	{
		if((list2.getSelectedIndex()>=0)&&(list2.getSelectedIndex()<listIndex))
		{
			((Sip)myParent).connctr.disconnect();
			((Sip)myParent).connctr=new Connector();
			String success=((Sip)myParent).connctr.connect(myParent,theList[list2.getSelectedIndex()],thePorts[list2.getSelectedIndex()]);
			if(success.length()==0)
			{
				closeDialog(null);
				((Sip)myParent).connctr.start();
				//((Application)myParent).textArea2.requestFocus();
			}

		}
	}

	private void list2KeyPressed(java.awt.event.KeyEvent evt) 
	{
		if(evt.getKeyCode()==127)
		{
			if((list2.getSelectedIndex()>0)&&(list2.getSelectedIndex()<listIndex)&&(listIndex>0))
			{
				for(int i=list2.getSelectedIndex();i<listIndex;i++)
				{
					theList[i]=theList[i+1];
					thePorts[i]=thePorts[i+1];
					listIndex--;
				}
				list2.remove(list2.getSelectedIndex());
				textField1.setText("");
				textField2.setText("");
				myParent.save(theList,thePorts,listIndex,myParent.hotkeys);
			}
		}
	}

	private void button2KeyPressed(java.awt.event.KeyEvent evt) 
	{
		if((evt.getKeyCode()==10)||(evt.getKeyCode()==13))
			button2MouseClicked(null);
	}

	private void button3KeyPressed(java.awt.event.KeyEvent evt) 
	{
		if((evt.getKeyCode()==10)||(evt.getKeyCode()==13))
			button3MouseClicked(null);
	}

	private void button4KeyPressed(java.awt.event.KeyEvent evt) 
	{
		if((evt.getKeyCode()==10)||(evt.getKeyCode()==13))
			button4MouseClicked(null);
	}

	private void button2MouseClicked(java.awt.event.MouseEvent evt) 
	{
		System.exit(0);
	}

	private void list2ItemStateChanged(java.awt.event.ItemEvent evt) 
	{
		if((list2.getSelectedIndex()<listIndex)&&(list2.getSelectedIndex()>=0))
		{
			textField2.setText(theList[list2.getSelectedIndex()]);
			textField1.setText(""+thePorts[list2.getSelectedIndex()]);
		}
	}

	private void formWindowClosed(java.awt.event.WindowEvent evt) 
	{
	}

	private void button4MouseClicked(java.awt.event.MouseEvent evt) 
	{
		if((list2.getSelectedIndex()>0)&&(list2.getSelectedIndex()<listIndex)&&(listIndex>0))
		{
			for(int i=list2.getSelectedIndex();i<listIndex;i++)
			{
				theList[i]=theList[i+1];
				thePorts[i]=thePorts[i+1];
				listIndex--;
			}
			list2.remove(list2.getSelectedIndex());
			textField1.setText("");
			textField2.setText("");
			myParent.save(theList,thePorts,listIndex,myParent.hotkeys);
		}
	}
	
	
	private void button3MouseClicked(java.awt.event.MouseEvent evt) 
	{
		if(textField2.getText().length()>0)
		{
			try
			{
				boolean ok=true;
				int port=Integer.parseInt(textField1.getText().trim());
				for(int i=0;i<listIndex;i++)
				{
					if(theList[i].equals(textField2.getText().trim())&&(port==thePorts[i]))
						ok=false;
				}
				if(ok)
				{
					theList[listIndex]=textField2.getText().trim();
					thePorts[listIndex]=port;
					list2.add((theList[listIndex].trim()+SPACES).substring(0,30)+" "+thePorts[listIndex]);
					listIndex++;
					myParent.save(theList,thePorts,listIndex,myParent.hotkeys);
				}
				textField1.setText("");
				textField2.setText("");
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
	}

	public void getTheList()
	{
		try
		{
			FileReader F=new FileReader(Sip.filename);
			BufferedReader reader=new BufferedReader(F);
			String line="";
			int hotkey=0;
			while((line!=null)&&(reader.ready()))
			{
				line=reader.readLine();
				if(line!=null)
				{
					if(hotkey<10)
					{
						if(line.length()>0)
							myParent.hotkeys[hotkey]=line;
						hotkey++;
					}
					else
					{
						String porter=reader.readLine();
						if(porter!=null)
						{
							try
							{
								thePorts[listIndex]=Integer.parseInt(porter.trim());
								list2.add((line.trim()+SPACES).substring(0,30)+" "+thePorts[listIndex]);
								theList[listIndex]=line;
								listIndex++;
							}
							catch(Exception e)
							{
								e.printStackTrace();
							}
						}
					}
				}
			}
			F.close();
		}
		catch(java.io.FileNotFoundException c)
		{

		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	
	private void formWindowOpened(java.awt.event.WindowEvent evt) 
	{
		Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
		int width=350;
		int height=230;
		int x = (screen.width-width)/2;
		int y = (screen.height-height)/2;
		this.setBounds(x,y,width,height);
		getTheList();
	}

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) 
	{
		setVisible (false);
		dispose ();
	}

	/**
	* @param args the command line arguments
	*/
	public static void main (String args[]) 
	{
	}
}
